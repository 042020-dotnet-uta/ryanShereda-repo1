//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.IFridge")]
    public interface IFridge {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Add", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/AddResponse")]
        int Add(string fruit, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Add", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(string fruit, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Subtract", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/SubtractResponse")]
        int Subtract(string fruit, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Subtract", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/SubtractResponse")]
        System.Threading.Tasks.Task<int> SubtractAsync(string fruit, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Get", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/GetResponse")]
        int Get(string fruit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IFridge/Get", ReplyAction="http://Microsoft.ServiceModel.Samples/IFridge/GetResponse")]
        System.Threading.Tasks.Task<int> GetAsync(string fruit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFridgeChannel : GettingStartedClient.ServiceReference1.IFridge, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FridgeClient : System.ServiceModel.ClientBase<GettingStartedClient.ServiceReference1.IFridge>, GettingStartedClient.ServiceReference1.IFridge {
        
        public FridgeClient() {
        }
        
        public FridgeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FridgeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FridgeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FridgeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(string fruit, int count) {
            return base.Channel.Add(fruit, count);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(string fruit, int count) {
            return base.Channel.AddAsync(fruit, count);
        }
        
        public int Subtract(string fruit, int count) {
            return base.Channel.Subtract(fruit, count);
        }
        
        public System.Threading.Tasks.Task<int> SubtractAsync(string fruit, int count) {
            return base.Channel.SubtractAsync(fruit, count);
        }
        
        public int Get(string fruit) {
            return base.Channel.Get(fruit);
        }
        
        public System.Threading.Tasks.Task<int> GetAsync(string fruit) {
            return base.Channel.GetAsync(fruit);
        }
    }
}
