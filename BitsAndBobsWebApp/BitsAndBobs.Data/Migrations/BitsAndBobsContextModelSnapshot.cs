// <auto-generated />
using System;
using BitsAndBobs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitsAndBobs.Data.Migrations
{
    [DbContext(typeof(BitsAndBobsContext))]
    partial class BitsAndBobsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("CustomersDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InventoryLocationLocationID")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryProductProductID")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("InventoryLocationLocationID");

                    b.HasIndex("InventoryProductProductID");

                    b.ToTable("InventoryDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationCountryID")
                        .HasColumnType("int");

                    b.Property<int?>("LocationStateID")
                        .HasColumnType("int");

                    b.HasKey("LocationID");

                    b.HasIndex("LocationCountryID");

                    b.HasIndex("LocationStateID");

                    b.ToTable("LocationsDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.LocationCountry", b =>
                {
                    b.Property<int>("LocationCountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationCountryID");

                    b.ToTable("LocationCountry");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.LocationState", b =>
                {
                    b.Property<int>("LocationStateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationStateID");

                    b.ToTable("LocationState");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderCustomerCustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderLocationLocationID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("OrderCustomerCustomerID");

                    b.HasIndex("OrderLocationLocationID");

                    b.ToTable("OrdersDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.OrderLineItem", b =>
                {
                    b.Property<int>("OrderLineItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LineItemOrderOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("LineItemProductProductID")
                        .HasColumnType("int");

                    b.Property<double>("LinePrice")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineItemID");

                    b.HasIndex("LineItemOrderOrderID");

                    b.HasIndex("LineItemProductProductID");

                    b.ToTable("OrderLineItemsDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("ProductsDB");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Inventory", b =>
                {
                    b.HasOne("BitsAndBobs.Data.DataModels.Location", "InventoryLocation")
                        .WithMany()
                        .HasForeignKey("InventoryLocationLocationID");

                    b.HasOne("BitsAndBobs.Data.DataModels.Product", "InventoryProduct")
                        .WithMany()
                        .HasForeignKey("InventoryProductProductID");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Location", b =>
                {
                    b.HasOne("BitsAndBobs.Data.DataModels.LocationCountry", "LocationCountry")
                        .WithMany()
                        .HasForeignKey("LocationCountryID");

                    b.HasOne("BitsAndBobs.Data.DataModels.LocationState", "LocationState")
                        .WithMany()
                        .HasForeignKey("LocationStateID");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.Order", b =>
                {
                    b.HasOne("BitsAndBobs.Data.DataModels.Customer", "OrderCustomer")
                        .WithMany()
                        .HasForeignKey("OrderCustomerCustomerID");

                    b.HasOne("BitsAndBobs.Data.DataModels.Location", "OrderLocation")
                        .WithMany()
                        .HasForeignKey("OrderLocationLocationID");
                });

            modelBuilder.Entity("BitsAndBobs.Data.DataModels.OrderLineItem", b =>
                {
                    b.HasOne("BitsAndBobs.Data.DataModels.Order", "LineItemOrder")
                        .WithMany()
                        .HasForeignKey("LineItemOrderOrderID");

                    b.HasOne("BitsAndBobs.Data.DataModels.Product", "LineItemProduct")
                        .WithMany()
                        .HasForeignKey("LineItemProductProductID");
                });
#pragma warning restore 612, 618
        }
    }
}
